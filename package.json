{
  "name": "whatsapp-backup",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo 'ðŸ§ª Running all tests...' && for file in tests/test-*.js; do echo \"\\nðŸ“‹ Running $(basename \"$file\")...\"; node \"$file\" || exit 1; done && echo '\\nâœ… All tests completed successfully!' && npm run clean-test-backups",
    "test:debug": "echo 'ðŸ”§ Running debug tools...' && for file in tests/analyze-*.js tests/debug-*.js tests/find-*.js; do [ -f \"$file\" ] && echo \"\\nðŸ“‹ Running $(basename \"$file\")...\" && node \"$file\"; done",
    "test:converters": "node tests/test-converters.js && npm run clean-test-backups",
    "test:sync": "node tests/test-sync.js && npm run clean-test-backups",
    "test:dedup": "node tests/test-deduplication.js && npm run clean-test-backups",
    "clean-test-backups": "echo 'ðŸ§¹ Cleaning test backup files...' && find tests/data -name '*.backup.*' -delete 2>/dev/null || true && echo 'âœ… Test backup files cleaned'",
    "copy-input-example-to-data": "cp -r data/input.example data/input",
    "prepare-output": "mkdir -p data/output && mkdir -p data/output/web && mkdir -p data/output/pdf",
    "clear-web": "rm -rf data/output/web/*",
    "clear-pdf": "rm -rf data/output/pdf/*",
    "clear-output": "npm run clear-web && npm run clear-pdf",
    "cp-data-to-web": "cp -r data/input/* data/output/web/",
    "cp-public-to-web-folders": "find data/output/web -mindepth 2 -type d | xargs -I {} cp src/public/* {}",
    "build-web": "npm run prepare-output && npm run clear-web && npm run cp-data-to-web && npm run cp-public-to-web-folders",
    "serve-web": "http-server data/output/web",
    "start": "npm run build-web && npm run serve-web",
    "build-pdfs": "cd src && node make-pdfs.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "array.prototype.flatmap": "^1.2.4",
    "http-server": "^0.12.3",
    "puppeteer": "^5.5.0"
  }
}
